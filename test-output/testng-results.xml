<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="8" total="17" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="TestNG Suite" duration-ms="1896" started-at="2018-11-20T07:06:35Z" finished-at="2018-11-20T07:06:37Z">
    <groups>
      <group name="Group1_in_package2">
        <method signature="Class1.method1_in_Class1_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class1@16f7c8c1]" name="method1_in_Class1_in_package2" class="package2.Class1"/>
        <method signature="Class2.method1_in_Class2_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class2@2f0a87b3]" name="method1_in_Class2_in_package2" class="package2.Class2"/>
        <method signature="Class3.method1_in_Class3_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class3@319b92f3]" name="method1_in_Class3_in_package2" class="package2.Class3"/>
      </group> <!-- Group1_in_package2 -->
      <group name="Group2_in_package2">
        <method signature="Class1.method2_in_Class1_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class1@16f7c8c1]" name="method2_in_Class1_in_package2" class="package2.Class1"/>
        <method signature="Class2.method2_in_Class2_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class2@2f0a87b3]" name="method2_in_Class2_in_package2" class="package2.Class2"/>
        <method signature="Class3.method2_in_Class3_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class3@319b92f3]" name="method2_in_Class3_in_package2" class="package2.Class3"/>
      </group> <!-- Group2_in_package2 -->
      <group name="X">
        <method signature="Class2.method1_in_Class2_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class2@2f0a87b3]" name="method1_in_Class2_in_package2" class="package2.Class2"/>
        <method signature="Class2.method2_in_Class2_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class2@2f0a87b3]" name="method2_in_Class2_in_package2" class="package2.Class2"/>
        <method signature="Class2.method3_in_Class2_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class2@2f0a87b3]" name="method3_in_Class2_in_package2" class="package2.Class2"/>
        <method signature="Class3.method1_in_Class3_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class3@319b92f3]" name="method1_in_Class3_in_package2" class="package2.Class3"/>
      </group> <!-- X -->
      <group name="Y">
        <method signature="Class1.method1_in_Class1_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class1@16f7c8c1]" name="method1_in_Class1_in_package2" class="package2.Class1"/>
        <method signature="Class1.method2_in_Class1_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class1@16f7c8c1]" name="method2_in_Class1_in_package2" class="package2.Class1"/>
        <method signature="Class1.method3_in_Class1_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class1@16f7c8c1]" name="method3_in_Class1_in_package2" class="package2.Class1"/>
        <method signature="Class3.method2_in_Class3_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class3@319b92f3]" name="method2_in_Class3_in_package2" class="package2.Class3"/>
      </group> <!-- Y -->
      <group name="Group3_in_package2">
        <method signature="Class1.method3_in_Class1_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class1@16f7c8c1]" name="method3_in_Class1_in_package2" class="package2.Class1"/>
        <method signature="Class2.method3_in_Class2_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class2@2f0a87b3]" name="method3_in_Class2_in_package2" class="package2.Class2"/>
        <method signature="Class3.method3_in_Class3_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class3@319b92f3]" name="method3_in_Class3_in_package2" class="package2.Class3"/>
      </group> <!-- Group3_in_package2 -->
      <group name="Z">
        <method signature="Class3.method3_in_Class3_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class3@319b92f3]" name="method3_in_Class3_in_package2" class="package2.Class3"/>
      </group> <!-- Z -->
    </groups>
    <test name="TestNG Suite Tests" duration-ms="1896" started-at="2018-11-20T07:06:35Z" finished-at="2018-11-20T07:06:37Z">
      <class name="package2.Class3">
        <test-method status="PASS" signature="beforeClass_in_CommonClass_in_package2()[pri:0, instance:package2.Class3@319b92f3]" name="beforeClass_in_CommonClass_in_package2" is-config="true" duration-ms="2" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class3@319b92f3]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="4" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class3.method3_in_Class3_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method3_in_Class3_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class3@319b92f3]" name="method3_in_Class3_in_package2" duration-ms="131" started-at="2018-11-20T07:06:36Z" description="Rupesh" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class3.method3_in_Class3_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3_in_Class3_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class3@319b92f3]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="9" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method3_in_Class3_in_package2 status=SUCCESS method=Class3.method3_in_Class3_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class3@319b92f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class3@319b92f3]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="3" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class3.method2_in_Class3_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method2_in_Class3_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class3@319b92f3]" name="method2_in_Class3_in_package2" duration-ms="129" started-at="2018-11-20T07:06:37Z" description="Rupesh" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class3.method2_in_Class3_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2_in_Class3_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class3@319b92f3]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="5" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method2_in_Class3_in_package2 status=SUCCESS method=Class3.method2_in_Class3_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class3@319b92f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class3@319b92f3]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="3" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class3.method1_in_Class3_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method1_in_Class3_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class3@319b92f3]" name="method1_in_Class3_in_package2" duration-ms="114" started-at="2018-11-20T07:06:37Z" description="Rupesh" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class3.method1_in_Class3_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1_in_Class3_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class3@319b92f3]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="4" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method1_in_Class3_in_package2 status=SUCCESS method=Class3.method1_in_Class3_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class3@319b92f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="afterClass_in_CommonClass_in_package2()[pri:0, instance:package2.Class3@319b92f3]" name="afterClass_in_CommonClass_in_package2" is-config="true" duration-ms="0" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass_in_CommonClass_in_package2 -->
      </class> <!-- package2.Class3 -->
      <class name="package2.Class2">
        <test-method status="PASS" signature="beforeClass_in_CommonClass_in_package2()[pri:0, instance:package2.Class2@2f0a87b3]" name="beforeClass_in_CommonClass_in_package2" is-config="true" duration-ms="1" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class2@2f0a87b3]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="3" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class2.method2_in_Class2_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method2_in_Class2_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class2@2f0a87b3]" name="method2_in_Class2_in_package2" duration-ms="143" started-at="2018-11-20T07:06:36Z" description="Kiran" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class2.method2_in_Class2_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2_in_Class2_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class2@2f0a87b3]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="6" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method2_in_Class2_in_package2 status=SUCCESS method=Class2.method2_in_Class2_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class2@2f0a87b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class2@2f0a87b3]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="2" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class2.method1_in_Class2_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method1_in_Class2_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class2@2f0a87b3]" name="method1_in_Class2_in_package2" duration-ms="145" started-at="2018-11-20T07:06:36Z" description="Rupesh" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class2.method1_in_Class2_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1_in_Class2_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class2@2f0a87b3]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="6" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method1_in_Class2_in_package2 status=SUCCESS method=Class2.method1_in_Class2_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class2@2f0a87b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class2@2f0a87b3]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="4" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class2.method3_in_Class2_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method3_in_Class2_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class2@2f0a87b3]" name="method3_in_Class2_in_package2" duration-ms="120" started-at="2018-11-20T07:06:37Z" description="Joseph" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class2.method3_in_Class2_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3_in_Class2_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class2@2f0a87b3]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="6" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method3_in_Class2_in_package2 status=SUCCESS method=Class2.method3_in_Class2_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class2@2f0a87b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="afterClass_in_CommonClass_in_package2()[pri:0, instance:package2.Class2@2f0a87b3]" name="afterClass_in_CommonClass_in_package2" is-config="true" duration-ms="0" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass_in_CommonClass_in_package2 -->
      </class> <!-- package2.Class2 -->
      <class name="package2.Class1">
        <test-method status="PASS" signature="beforeSuite_in_CommonClass_in_package2(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:package2.Class1@16f7c8c1]" name="beforeSuite_in_CommonClass_in_package2" is-config="true" duration-ms="1504" started-at="2018-11-20T07:06:34Z" finished-at="2018-11-20T07:06:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tablet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeTest_in_CommonClass_in_package2()[pri:0, instance:package2.Class1@16f7c8c1]" name="beforeTest_in_CommonClass_in_package2" is-config="true" duration-ms="2" started-at="2018-11-20T07:06:35Z" finished-at="2018-11-20T07:06:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeClass_in_CommonClass_in_package2()[pri:0, instance:package2.Class1@16f7c8c1]" name="beforeClass_in_CommonClass_in_package2" is-config="true" duration-ms="11" started-at="2018-11-20T07:06:35Z" finished-at="2018-11-20T07:06:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class1@16f7c8c1]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="14" started-at="2018-11-20T07:06:35Z" finished-at="2018-11-20T07:06:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class1.method1_in_Class1_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="FAIL" signature="method1_in_Class1_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class1@16f7c8c1]" name="method1_in_Class1_in_package2" duration-ms="612" started-at="2018-11-20T07:06:35Z" description="Rupesh" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class1.method1_in_Class1_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException
at package2.Class1.method1_in_Class1_in_package2(Class1.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1_in_Class1_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class1@16f7c8c1]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="61" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method1_in_Class1_in_package2 status=FAILURE method=Class1.method1_in_Class1_in_package2(java.lang.reflect.Method)[pri:1, instance:package2.Class1@16f7c8c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class1@16f7c8c1]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="2" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class1.method2_in_Class1_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method2_in_Class1_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class1@16f7c8c1]" name="method2_in_Class1_in_package2" duration-ms="115" started-at="2018-11-20T07:06:36Z" description="Rupesh" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class1.method2_in_Class1_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2_in_Class1_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class1@16f7c8c1]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="8" started-at="2018-11-20T07:06:36Z" finished-at="2018-11-20T07:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method2_in_Class1_in_package2 status=SUCCESS method=Class1.method2_in_Class1_in_package2(java.lang.reflect.Method)[pri:2, instance:package2.Class1@16f7c8c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="beforeMethod_in_CommonClass_in_package2(java.lang.reflect.Method)[pri:0, instance:package2.Class1@16f7c8c1]" name="beforeMethod_in_CommonClass_in_package2" is-config="true" duration-ms="3" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class1.method3_in_Class1_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="method3_in_Class1_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class1@16f7c8c1]" name="method3_in_Class1_in_package2" duration-ms="146" started-at="2018-11-20T07:06:37Z" description="Kiran" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void package2.Class1.method3_in_Class1_in_package2(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3_in_Class1_in_package2 -->
        <test-method status="PASS" signature="afterMethod_in_CommonClass_in_package2(org.testng.ITestResult)[pri:0, instance:package2.Class1@16f7c8c1]" name="afterMethod_in_CommonClass_in_package2" is-config="true" duration-ms="6" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=method3_in_Class1_in_package2 status=SUCCESS method=Class1.method3_in_Class1_in_package2(java.lang.reflect.Method)[pri:3, instance:package2.Class1@16f7c8c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="afterClass_in_CommonClass_in_package2()[pri:0, instance:package2.Class1@16f7c8c1]" name="afterClass_in_CommonClass_in_package2" is-config="true" duration-ms="0" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="aftertest_in_CommonClass_in_package2()[pri:0, instance:package2.Class1@16f7c8c1]" name="aftertest_in_CommonClass_in_package2" is-config="true" duration-ms="0" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest_in_CommonClass_in_package2 -->
        <test-method status="PASS" signature="afterSuite_in_CommonClass_in_package2()[pri:0, instance:package2.Class1@16f7c8c1]" name="afterSuite_in_CommonClass_in_package2" is-config="true" duration-ms="611" started-at="2018-11-20T07:06:37Z" finished-at="2018-11-20T07:06:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite_in_CommonClass_in_package2 -->
      </class> <!-- package2.Class1 -->
    </test> <!-- TestNG Suite Tests -->
  </suite> <!-- TestNG Suite -->
</testng-results>
